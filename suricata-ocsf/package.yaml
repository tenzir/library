---
id: suricata-ocsf
name: Suricata OCSF Mappings
author: Tenzir
author_icon: https://raw.githubusercontent.com/tenzir/library/main/author.svg
package_icon: |
  https://raw.githubusercontent.com/tenzir/library/main/suricata-ocsf/package.svg
description: |
  [Suricata](https://suricata.io) is an open-source network monitor and
  threat detection tool.

  This package converts all Suricata events published on the topic `suricata` to
  OCSF and publishes the converted events on the topic `ocsf`.

pipelines:
  suricata-flow-to-ocsf:
    name: Suricata Flow to OCSF Network Activity
    description: Maps Suricata Flow events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      let $proto_nums = {
        TCP: 6,
        UDP: 17,
        ICMP: 1,
      }
      subscribe "suricata"
      where @name == "suricata.flow"
      this = { suricata: this }
       // === Classification ===
      ocsf.activity_id = 6
      ocsf.category_uid = 4
      ocsf.class_uid = 4001
      ocsf.severity_id = 1
      ocsf.type_uid = 400106
      // === Occurrence ===
      time = suricata.timestamp
      drop suricata.timestamp
      ocsf.duration = suricata.flow.end - suricata.flow.start
      ocsf.end_time = suricata.flow.end
      ocsf.start_time = suricata.flow.start
      drop suricata.flow.end, suricata.flow.start
      // === Context ===
      ocsf.metadata = {
        log_name: suricata.event_type,
        product: {
          name: "Suricata",
          vendor_name: "Open Information Security Foundation",
        },
        uid: string(suricata.flow_id),
        version: "v1.4.0",
      }
      drop suricata.event_type, suricata.flow_id
      // === Primary ===
       if suricata.src_ip.is_v6() or suricata.dest_ip.is_v6() {
      suricata.protocol_ver_id = 6
      } else {
      suricata.protocol_ver_id = 4
      }
      ocsf.connection_info = {
        community_uid: suricata.community_id,
        protocol_ver_id: suricata.protocol_ver_id,
        protocol_name: suricata.proto.to_lower(),
        protocol_num: $proto_nums[suricata.proto].otherwise(-1),
      }
     
      drop suricata.community_id, suricata.protocol_ver_id, suricata.proto
      ocsf.dst_endpoint = {
        ip: suricata.dest_ip,
        port: suricata.dest_port,
      }
      ocsf.src_endpoint = {
        ip: suricata.src_ip,
        port: suricata.src_port,
      }
      drop suricata.dest_ip, suricata.dest_port, suricata.src_ip, suricata.src_port
      ocsf.traffic = {
        bytes_in: suricata.flow.bytes_toclient,
        bytes_out: suricata.flow.bytes_toserver,
        packets_in: suricata.flow.pkts_toclient,
        packets_out: suricata.flow.pkts_toserver,
        bytes: suricata.flow.bytes_toclient + suricata.flow.bytes_toserver,
        packets: suricata.flow.pkts_toclient + suricata.flow.pkts_toserver,
      }
      drop suricata.flow.bytes_toclient, suricata.flow.bytes_toserver, suricata.flow.pkts_toclient, suricata.flow.pkts_toserver
      ocsf.status_id = 99
      ocsf.status = "Other"
      drop suricata.flow.age
      this = {...ocsf, unmapped: suricata}
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-dns-to-ocsf:
    name: Suricata DNS to OCSF DNS Activity
    description: Maps Suricata DNS events to an OCSF DNS Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      let $rcode_id = {
        NOERROR: 0,
        FORMERROR: 1,
        SERVERROR: 2,
        NXDOMAIN: 3,
        NOTIMP: 4,
        REFUSED: 5,
        YXDOMAIN: 6,
        YXRRSET: 7,
        NXRRSET: 8,
        NOTAUTH: 9,
        NOTZONE: 10,
        DSOTYPENI: 11,
        BADSIG_VERS: 16,
        BADKEY: 17,
        BADTIME: 18,
        BADMODE: 19,
        BADNAME: 20,
        BADALG: 21,
        BADTRUNC: 22,
        BADCOOKIE: 23,
      }
      let $rcode = {
        NOERROR: "NoError",
        FORMERROR: "FormError",
        SERVERROR: "ServError",
        NXDOMAIN: "NxDomain",
        NOTIMP: "NotImp",
        REFUSED: "Refused",
        YXDOMAIN: "YXDomain",
        YXRRSET: "YXRRSet",
        NXRRSET: "NXRRSet",
        NOTAUTH: "NotAuth",
        NOTZONE: "NotZone",
      }
      subscribe "suricata"
      where @name == "suricata.dns"
      this = { suricata: this }
      // === Classification ===
      // TODO: Proper request/response event splitting.
      ocsf.has_query = false
      ocsf.has_response = false
      if suricata.dns.rrname != null {
        // Version <=7.0 DNS query logs.
        // See https://docs.suricata.io/en/latest/upgrade/8.0-dns-logging-changes.html
        ocsf.query = {
          hostname: suricata.dns.rrname,
          type: suricata.dns.rrtype,
        }
      ocsf.has_query = true
      }
      if suricata.dns.queries[0].rrname != null {
        // Version >=8.0 DNS query logs.
        // See https://docs.suricata.io/en/latest/upgrade/8.0-dns-logging-changes.html
        ocsf.query = {
          hostname: suricata.dns.queries[0].rrname,
          type: suricata.dns.queries[0].rrtype,
        }
      has_query = true
      }
      drop suricata.dns.rrname, suricata.dns.rrtype
      ocsf.answers = suricata.dns.answers.map(answer, {
      type: answer.rrtype,
      rdata: answer.rdata,
      ttl: answer.ttl,
      })
      ocsf.has_response = suricata.dns.answers.length().otherwise(0) > 0
      if (ocsf.has_query and ocsf.has_response) {
        activity_id = 6
        type_uid = 400306
      } else if (ocsf.has_query) {
        activity_id = 1
        type_uid = 400301
      } else if (ocsf.has_response) {
        activity_id = 2
        type_uid = 400302
      }
      drop suricata.dns.answers
      ocsf.type_uid = type_uid
      ocsf.severity_id = 1
      ocsf.class_uid = 4003
      ocsf.category_uid = 4
      ocsf.activity_id = activity_id
      // --- Context (required) ---
      ocsf.metadata = {
        log_name: suricata.event_type,
        product: {
          name: "Suricata",
          vendor_name: "Open Information Security Foundation",
        },
        uid: string(suricata.flow_id),
        version: "v1.3.0",
      }
      drop suricata.event_type, suricata.flow_id
      // === Occurrence ===
      ocsf.time = suricata.timestamp
      drop suricata.timestamp
      // === Context ===
      // === Primary ===
      ocsf.src_endpoint = {
        ip: suricata.src_ip,
        port: suricata.src_port,
      }
      drop suricata.src_ip, suricata.src_port
      ocsf.dst_endpoint = {
        ip: suricata.dest_ip,
        port: suricata.dest_port,
      }
      drop suricata.dest_ip, suricata.dest_port
      ocsf.status_id = 1
      ocsf.rcode_id = $rcode_id[suricata.dns.rcode_id].otherwise(99)
      ocsf.rcode = $rcode[suricata.dns.rcode].otherwise("Unknown")
      drop suricata.dns.rcode
      this = {...ocsf, unmapped: suricata}
      @name = "ocsf.dns_activity"
      publish "ocsf"

  suricata-smb-to-ocsf:
    name: Suricata SMB to OCSF SMB Activity
    description: Maps Suricata SMB events to an OCSF SMB Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.smb"
      let $activity_id = {
      FILE_SUPERSEDE: 1,
      FILE_OPEN: 2,
      FILE_CREATE: 3,
      FILE_OPEN_IF: 4,
      FILE_OVERWRITE: 5,
      FILE_OVERWRITE_IF:: 6,
      }
      let $activity_name = {
      FILE_SUPERSEDE: "File Supersede",
      FILE_OPEN: "File Open",
      FILE_CREATE: "File Create",
      FILE_OPEN_IF: "File Open If",
      FILE_OVERWRITE: "File Overwrite",
      FILE_OVERWRITE_IF:: "File Overwrite If",
      }
      this = { suricata: this }
      // --- Classification (required) ---
      ocsf.type_uid = type_uid
      ocsf.severity_id = 1
      ocsf.class_uid = 4006
      ocsf.category_uid = 4
      ocsf.src_endpoint = {
        ip: suricata.src_ip,
        port: suricata.src_port,
      }
      drop suricata.src_ip, suricata.src_port
      ocsf.activity_id = $activity_id[suricata.smb.disposition].otherwise(99)
      ocsf.activity_name = $activity_name[suricata.smb.disposition].otherwise(suricata.smb.command)
      drop suricata.smb.disposition, suricata.smb.command
      ocsf.type_uid = ocsf.class_uid * 100 + ocsf.activity_id
      // --- Classification (optional) ---
      ocsf.activity_name = activity_name
      // --- Context (required) ---
      ocsf.metadata = {
        log_name: suricata.event_type,
        product: {
          name: "Suricata",
          vendor_name: "Open Information Security Foundation",
        }
        uid: string(suricata.flow_id),
        version: "v1.3.0",
      }
      drop suricata.event_type, suricata.flow_id
      // --- Context (recommended) ---
      ocsf.dialect = suricata.smb.dialect
      drop suricata.smb.dialect
      // --- Context (optional) ---
      // --- Occurrence (required) ---
      ocsf.time = suricata.timestamp
      drop suricata.timestamp
      // --- Primary (required) ---
      ocsf.dst_endpoint = {
        ip: suricata.dest_ip,
        port: suricata.dest_port,
      }
      drop suricata.dest_ip, suricata.dest_port
      // --- Primary (recommended) ---
            if suricata.smb.status_code == "0x0" {
        ocsf.status_id = 1
        ocsf.status = "Success"
      } else {
        ocsf.status_id = 99
        ocsf.status = suricata.smb.status
      }
      drop suricata.smb.status_code, suricata.smb.status
      if suricata.smb.filename != null {
        ocsf.file = {
          type_id: 0,
          name: suricata.smb.filename,
          created_time: suricata.smb.created,
          modified_time: suricata.smb.modified,
          accessed_time: suricata.smb.accessed,
        }
      } else {
        ocsf.file = null
      }
      drop suricata.smb.filename, suricata.smb.created, suricata.smb.modified, suricata.smb.accessed
      ocsf.tree_uid = string(suricata.smb.tree_id)
      drop suricata.smb.tree_id
      this = {...ocsf, unmapped: suricata}
      @name = "ocsf.smb_activity"
      publish "ocsf"

  suricata-alert-to-ocsf:
    name: Suricata Alert to OCSF Detection Finding Activity
    description: |
      Maps Suricata Alert events to an OCSF Detection Finding Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.alert"
      this = { suricata: this }
      // --- Classification (required) ---
      ocsf.type_uid = 200401
      if suricata.alert.severity == null {
        ocsf.severity_id = 0
      } else if suricata.alert.severity == 1 {
        ocsf.severity_id = 4
      } else if suricata.alert.severity == 2 {
        ocsf.severity_id = 3
      } else if suricata.alert.severity == 3 {
        ocsf.severity_id = 2
      }
      drop suricata.alert.severity
      ocsf.class_uid = 2004
      ocsf.category_uid = 2
      ocsf.activity_id = 1
      // --- Context (required) ---
      ocsf.metadata = {
        log_name: suricata.event_type,
        product: {
          name: "Suricata",
          vendor_name: "Open Information Security Foundation",
        },
        uid: string(suricata.flow_id),
        version: "v1.3.0",
      }
      drop suricata.event_type, suricata.flow_id
      // --- Context (recommended) ---
      ocsf.status_id = 1
      // --- Context (optional) ---
      // --- Occurrence (required) ---
      ocsf.time = suricata.timestamp
      drop suricata.timestamp
      // --- Primary (required) ---
       ocsf.src_endpoint = {
        ip: suricata.src_ip,
        port: suricata.src_port,
      }
      drop suricata.src_ip, suricata.src_port
      ocsf.dst_endpoint = {
        ip: suricata.dest_ip,
        port: suricata.dest_port,
      }
      drop suricata.dest_ip, suricata.dest_port
      ocsf.finding_info = {
        uid: suricata.flow_uid,
        title: suricata.alert.category,
        desc: suricata.alert.signature,
      }
      drop suricata.alert.category, suricata.alert.signature
      this = {...ocsf, unmapped: suricata}
      @name = "ocsf.detection_finding"
      publish "ocsf"

  suricata-http-to-ocsf:
    name: Suricata HTTP to OCSF HTTP Activity
    description: Maps Suricata HTTP events to an OCSF HTTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.http"
      this = { event: this }
      if event.http.http_method == null {
        type_uid = 400200
        activity_id = 0
        activity_name = "Unknown"
      } else if event.http.http_method == "CONNECT" {
        type_uid = 400201
        activity_id = 1
        activity_name = "Connect"
      } else if event.http.http_method == "DELETE" {
        type_uid = 400202
        activity_id = 2
        activity_name = "Delete"
      } else if event.http.http_method == "GET" {
        type_uid = 400203
        activity_id = 3
        activity_name = "Get"
      } else if event.http.http_method == "HEAD" {
        type_uid = 400204
        activity_id = 4
        activity_name = "Head"
      } else if event.http.http_method == "OPTIONS" {
        type_uid = 400205
        activity_id = 5
        activity_name = "Options"
      } else if event.http.http_method == "POST" {
        type_uid = 400206
        activity_id = 6
        activity_name = "Post"
      } else if event.http.http_method == "PUT" {
        type_uid = 400207
        activity_id = 7
        activity_name = "Put"
      } else if event.http.http_method == "TRACE" {
        type_uid = 400208
        activity_id = 8
        activity_name = "Trace"
      } else {
        type_uid = 400299
        activity_id = 99
        activity_name = event.http.http_method
      }
      if event.http.status == null {
        status_id = 0
      } else if event.http.status >= 200 and event.http.status < 400 {
        status_id = 1
      } else if event.http.status >= 400 and event.http.status < 600 {
        status_id = 2
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4002,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        file: {
          type_id: 0,
          name: event.fileinfo.filename,
          size: event.fileinfo.size,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        http_request: {
          url: {
            hostname: event.http.hostname,
            url_string: event.http.url,
          },
          version: event.http.protocol,
          http_method: event.http.http_method,
          user_agent: event.http.http_user_agent,
        },
        http_response: {
          code: event.http.status,
          length: event.http.length,
          content_type: event.http.http_content_type,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: status_id,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.http.http_method,
        unmapped.http.status,
        unmapped.http.hostname,
        unmapped.http.url,
        unmapped.http.protocol,
        unmapped.http.http_user_agent,
        unmapped.http.length,
        unmapped.http.http_content_type,
      )
      // TODO: Homogenize all HTTP Activity events.
      @name = "ocsf.http_activity"
      publish "ocsf"

  suricata-fileinfo-to-ocsf:
    name: Suricata Fileinfo to OCSF HTTP Activity
    description: Maps Suricata Fileinfo events to an OCSF HTTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.fileinfo"
      this = { event: this }
      if event.http.http_method == null {
        type_uid = 400200
        activity_id = 0
        activity_name = "Unknown"
      } else if event.http.http_method == "CONNECT" {
        type_uid = 400201
        activity_id = 1
        activity_name = "Connect"
      } else if event.http.http_method == "DELETE" {
        type_uid = 400202
        activity_id = 2
        activity_name = "Delete"
      } else if event.http.http_method == "GET" {
        type_uid = 400203
        activity_id = 3
        activity_name = "Get"
      } else if event.http.http_method == "HEAD" {
        type_uid = 400204
        activity_id = 4
        activity_name = "Head"
      } else if event.http.http_method == "OPTIONS" {
        type_uid = 400205
        activity_id = 5
        activity_name = "Options"
      } else if event.http.http_method == "POST" {
        type_uid = 400206
        activity_id = 6
        activity_name = "Post"
      } else if event.http.http_method == "PUT" {
        type_uid = 400207
        activity_id = 7
        activity_name = "Put"
      } else if event.http.http_method == "TRACE" {
        type_uid = 400208
        activity_id = 8
        activity_name = "Trace"
      } else {
        type_uid = 400299
        activity_id = 99
        activity_name = event.http.http_method
      }
      if event.http.status == null {
        status_id = 0
      } else if event.http.status >= 200 and event.http.status < 400 {
        status_id = 1
      } else if event.http.status >= 400 and event.http.status < 600 {
        status_id = 2
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4002,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        file: {
          type_id: 0,
          name: event.fileinfo.filename,
          size: event.fileinfo.size,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        http_request: {
          url: {
            hostname: event.http.hostname,
            url_string: event.http.url,
          },
          version: event.http.protocol,
          http_method: event.http.http_method,
          user_agent: event.http.http_user_agent,
        },
        http_response: {
          code: event.http.status,
          length: event.http.length,
          content_type: event.http.http_content_type,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: status_id,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.http.http_method,
        unmapped.http.status,
        unmapped.http.hostname,
        unmapped.http.url,
        unmapped.http.protocol,
        unmapped.http.http_user_agent,
        unmapped.http.length,
        unmapped.http.http_content_type,
        unmapped.fileinfo.filename,
        unmapped.fileinfo.size,
      )
      // TODO: Homogenize all HTTP Activity events.
      @name = "ocsf.http_activity"
      publish "ocsf"

  suricata-ssh-to-ocsf:
    name: Suricata SSH to OCSF SSH Activity
    description: Maps Suricata SSH events to an OCSF SSH Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ssh"
      this = { event: this }
      this = {
        // --- Classification (required) ---
        type_uid: 400706,
        severity_id: 1,
        class_uid: 4007,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (recommended) ---
        protocol_ver: event.ssh.server.proto_version,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: 0,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.ssh.server.proto_version,
      )
      @name = "ocsf.ssh_activity"
      publish "ocsf"

  suricata-ftp-to-ocsf:
    name: Suricata FTP to OCSF FTP Activity
    description: Maps Suricata FTP events to an OCSF FTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ftp"
      this = { event: this }
      if event.ftp.command == null {
        type_uid = 400800
        activity_id = 0
        activity_name = "Unknown"
      } else if event.ftp.command == "STOR" or event.ftp.command == "STOU" or event.ftp.command == "PUT" or event.ftp.command == "APPE" {
        type_uid = 400801
        activity_id = 1
        activity_name = "Put"
      } else if event.ftp.command == "GET" or event.ftp.command == "RETR" {
        type_uid = 400802
        activity_id = 2
        activity_name = "Get"
      } else if event.ftp.command == "MLST" {
        type_uid = 400803
        activity_id = 3
        activity_name = "Poll"
      } else if event.ftp.command == "DELE" {
        type_uid = 400804
        activity_id = 4
        activity_name = "Delete"
      } else if event.ftp.command == "RNFR" or event.ftp.command == "RNTO" {
        type_uid = 400805
        activity_id = 5
        activity_name = "Rename"
      } else if event.ftp.command == "NLST" or event.ftp.command == "LIST" or event.ftp.command == "MLSD" {
        type_uid = 400806
        activity_id = 6
        activity_name = "List"
      } else {
        type_uid = 400899
        activity_id = 99
        activity_name = event.ftp.command
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4008,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: 0,
        command: event.ftp.command,
        command_responses: event.ftp.reply,
        codes: event.ftp.completion_code,
        port: event.ftp.dynamic_port,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.ftp.command,
        unmapped.ftp.reply,
        unmapped.ftp.completion_code,
        unmapped.ftp.dynamic_port,
      )
      @name = "ocsf.ftp_activity"
      publish "ocsf"

  suricata-mail-to-ocsf:
    name: Suricata SMTP to OCSF Email Activity
    description: Maps Suricata SMTP events to an OCSF Email Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.smtp"
      this = { event: this }
      where event.smtp.mail_from != null
      where event.smtp.rcpt_to != null
      this = {
        // --- Classification (required) ---
        type_uid: 400900,
        severity_id: 1,
        class_uid: 4009,
        category_uid: 4,
        // --- Classification (optional) ---
        activity_id: 0,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        direction_id: 0,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        email: {
          from: event.smtp.mail_from,
          to: event.smtp.rcpt_to
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        status_id: 0,
        smtp_hello: event.smtp.helo
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.smtp.mail_from,
        unmapped.smtp.rcpt_to,
        unmapped.smtp.helo,
      )
      @name = "ocsf.email_activity"
      publish "ocsf"

  suricata-tls-to-ocsf:
    name: Suricata TLS to OCSF Network Activity
    description: |
      Maps Suricata TLS events to an OCSF Network Activity event.
      Experimental and to be merged with the suricata.flow events.
    restart-on-error: 5m
    disabled: true
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.tls"
      this = { event: this }
      if event.tls.version != null {
        tls_version = event.tls.version
      } else {
        tls_version = "Unknown"
      }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      if event.tls.issuerdn != null {
          certificate = {
          issuer: event.tls.issuerdn,
          fingerprints: [{algorithm_id: 2, value: event.tls.fingerprint}],
          serial_number: event.tls.serial,
          expiration_time: event.tls.notafter,
          creation_time: event.tls.notbefore,
        }
      } else {
        certificate = null
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        tls: {
          version: tls_version,
          sni: event.tls.sni,
          ja3s_hash: event.tls.ja3s,
          ja3_hash: event.tls.ja3,
          certificate: certificate,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.tls.issuerdn,
        unmapped.tls.fingerprint,
        unmapped.tls.serial,
        unmapped.tls.notafter,
        unmapped.tls.notbefore,
        unmapped.tls.sni,
        unmapped.tls.ja3s,
        unmapped.tls.ja3,
        unmapped.tls.version,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-snmp-to-ocsf:
    name: Suricata SNMP to OCSF Network Activity
    description: Maps Suricata SNMP events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.snmp"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-sip-to-ocsf:
    name: Suricata SIP to OCSF Network Activity
    description: Maps Suricata SIP events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.sip"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-ikev2-to-ocsf:
    name: Suricata IKEV2 to OCSF Network Activity
    description: Maps Suricata IKEV2 events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ikev2"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-mqtt-to-ocsf:
    name: Suricata MQTT to OCSF Network Activity
    description: Maps Suricata MQTT events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.mqtt"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-krb5-to-ocsf:
    name: Suricata KRB5 to OCSF Network Activity
    description: |
      Maps Suricata KRB5 events to an OCSF Network Activity event.
      Enable this pipeline for further Windows authentication event info.
    restart-on-error: 5m
    disabled: true
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.krb5"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.3.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-dhcp-to-ocsf:
    name: Suricata DHCP to OCSF Network Activity
    description: |
      Maps Suricata DHCP events to an OCSF DHCP Activity event.
    restart-on-error: 5m
    disabled: true
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.dhcp"
      this = { event: this }
      class_uid = 4004
      type = string(event.dhcp.dhcp_type)
      if type == "discover" {
        activity_id = 1
        activity_name = "Discover"
      } else if type == "offer" {
        activity_id = 2
        activity_name = "Offer"
      } else if type == "request" {
        activity_id = 3
        activity_name = "Request"
      } else if type == "decline" {
        activity_id = 4
        activity_name = "Decline"
      } else if type == "ack" {
        activity_id = 5
        activity_name = "Ack"
      } else if type == "nak" {
        activity_id = 6
        activity_name = "Nak"
      } else if type == "release" {
        activity_id = 7
        activity_name = "Release"
      } else if type == "inform" {
        activity_id = 8
        activity_name = "Inform"
      } else {
        activity_id = 0
        activity_name = "Other"
      }
      this = {
        // --- Classification (required) ---
        activity_id: activity_id,
        category_uid: 4,
        class_uid: class_uid,
        type_id: class_uid * 100 + activity_id,
        severity_id: 1,
        // --- Classification (optional) ---
        activity_name: activity_name,
        category_name: "Network Activity",
        class_name: "DHCP Activity",
        severity: "Informational",
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Context (required) ---
        metadata: {
          log_name: event.event_type,
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
          uid: string(event.flow_id),
          version: "v1.4.0",
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Primary (recommended) ---
        connection_info: {
          direction: "Other",
          direction_id: 99,
          protocol_ver_id: 0,
          protocol_name: "udp",
          protocol_num: 17,
          community_uid: event.community_id,
        },
        dst_endpoint: {
          ip: event.dest_ip,
        },
        src_endpoint: {
          hostname: event.dhcp.hostname,
          ip: event.dhcp.assigned_ip,
          mac: event.dhcp.client_mac,
          type_id: 0
        },
        lease_duration: event.dhcp.lease_time,
        status: "Other",
        status_id: 99,
        transaction_uid: event.dhcp.id
      }
      // Drop all the mapped fields.
      drop(
        unmapped.timestamp,
        unmapped.flow_id,
        unmapped.event_type,
        unmapped.dhcp.assigned_ip,
        unmapped.dhcp.client_mac,
        unmapped.dhcp.hostname,
        unmapped.dhcp.type,
        unmapped.dhcp.lease_time,
      )
      @name = "ocsf.dhcp_activity"
      publish "ocsf"

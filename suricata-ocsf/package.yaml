---
id: suricata-ocsf
name: Suricata OCSF Mappings
author: Tenzir
author_icon: https://raw.githubusercontent.com/tenzir/library/main/author.svg
package_icon: |
  https://raw.githubusercontent.com/tenzir/library/main/suricata-ocsf/package.svg
description: |
  [Suricata](https://suricata.io) is an open-source network monitor and
  threat detection tool.

  This package converts all Suricata events published on the topic `suricata` to
  OCSF and publishes the converted events on the topic `ocsf`.

pipelines:
  suricata-flow-to-ocsf:
    name: Suricata Flow to OCSF Network Activity
    description: Maps Suricata Flow events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.flow"
      this = { event: this }
      this = {
        // --- Classification (required) ---
        activity_id: 6,
        category_uid: 4,
        class_uid: 4001,
        severity_id: 1,
        type_uid: 400106,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.flow",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: 99,
        status: event.flow.state,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-dns-to-ocsf:
    name: Suricata DNS to OCSF DNS Activity
    description: Maps Suricata DNS events to an OCSF DNS Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.dns"
      this = { event: this }
      // TODO: Proper request/response event splitting.
      has_query = false
      has_response = false
      if event.dns.rrname != null {
        // Version <=7.0 DNS query logs.
        // See https://docs.suricata.io/en/latest/upgrade/8.0-dns-logging-changes.html
        query = {
          hostname: event.dns.rrname,
          type: event.dns.rrtype,
        }
        has_query = true
      }
      if event.dns.queries[0].rrname != null {
        // Version >=8.0 DNS query logs.
        // See https://docs.suricata.io/en/latest/upgrade/8.0-dns-logging-changes.html
        query = {
          hostname: event.dns.queries[0].rrname,
          type: event.dns.queries[0].rrtype,
        }
        has_query = true
      }
      if event.dns.answers[0] != null {
        // TODO: Iterate through all answers and assign them to the OCSF DNS Answer field.
        has_response = true
      }
      if (has_query and has_response) {
        activity_id = 6
        type_uid = 400306
      } else if (has_query) {
        activity_id = 1
        type_uid = 400301
      } else if (has_response) {
        activity_id = 2
        type_uid = 400302
      }
      rcode = event.dns.rcode
      if (rcode == "NOERROR") {
        rcode_id = 0
        rcode = "NoError"
      } else if (rcode == "FORMERROR") {
        rcode_id = 1
        rcode = "FormError"
      } else if (rcode == "SERVERROR") {
        rcode_id = 2
        rcode = "ServError"
      } else if (rcode == "NXDOMAIN") {
        rcode_id = 3
        rcode = "NxDomain"
      } else if (rcode == "NOTIMP") {
        rcode_id = 4
        rcode = "NotImp"
      } else if (rcode == "REFUSED") {
        rcode_id = 5
        rcode = "Refused"
      } else if (rcode == "YXDOMAIN") {
        rcode_id = 6
        rcode = "YXDomain"
      } else if (rcode == "YXRRSET") {
        rcode_id = 7
        rcode = "YXRRSet"
      } else if (rcode == "NXRRSET") {
        rcode_id = 8
        rcode = "NXRRSet"
      } else if (rcode == "NOTAUTH") {
        rcode_id = 9
        rcode = "NotAuth"
      } else if (rcode == "NOTZONE") {
        rcode_id = 10
        rcode = "NotZone"
      } else if (rcode == "DSOTYPENI") {
        rcode_id = 11
      } else if (rcode == "BADSIG_VERS") {
        rcode_id = 16
      } else if (rcode == "BADKEY") {
        rcode_id = 17
      } else if (rcode == "BADTIME") {
        rcode_id = 18
      } else if (rcode == "BADMODE") {
        rcode_id = 19
      } else if (rcode == "BADNAME") {
        rcode_id = 20
      } else if (rcode == "BADALG") {
        rcode_id = 21
      } else if (rcode == "BADTRUNC") {
        rcode_id = 22
      } else if (rcode == "BADCOOKIE") {
        rcode_id = 23
      } else {
        rcode_id = 99
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4003,
        category_uid: 4,
        activity_id: activity_id,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.dns",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        status_id: 1,
        rcode_id: rcode_id,
        rcode: rcode,
        query: query,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.dns.rcode,
        unmapped.dns.rrtype,
        unmapped.dns.rrname,
      )
      @name = "ocsf.dns_activity"
      publish "ocsf"

  suricata-smb-to-ocsf:
    name: Suricata SMB to OCSF SMB Activity
    description: Maps Suricata SMB events to an OCSF SMB Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.smb"
      this = { event: this }
      python "self.tree_uid = str(self.event.smb.tree_id)"
      if event.smb.filename != null {
        file = {
          type_id: 0,
          name: event.smb.filename,
          created_time: event.smb.created,
          modified_time: event.smb.modified,
          accessed_time: event.smb.accessed,
        }
      } else {
        file = null
      }
      if event.smb.status_code == "0x0" {
        status_id = 1
        status = "Success"
      } else {
        status_id = 99
        status = event.smb.status
      }
      if event.smb.disposition == "FILE_SUPERSEDE" {
        type_uid = 400601
        activity_id = 1
        activity_name = "File Supersede"
      } else if event.smb.disposition == "FILE_OPEN" {
        type_uid = 400602
        activity_id = 2
        activity_name = "File Open"
      } else if event.smb.disposition == "FILE_CREATE" {
        type_uid = 400603
        activity_id = 3
        activity_name = "File Create"
      } else if event.smb.disposition == "FILE_OPEN_IF" {
        type_uid = 400604
        activity_id = 4
        activity_name = "File Open If"
      } else if event.smb.disposition == "FILE_OVERWRITE" {
        type_uid = 400605
        activity_id = 5
        activity_name = "File Overwrite"
      } else if event.smb.disposition == "FILE_OVERWRITE_IF" {
        type_uid = 400606
        activity_id = 6
        activity_name = "File Overwrite If"
      } else {
        type_uid = 400699
        activity_id = 99
        activity_name = event.smb.command
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4006,
        category_uid: 4,
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.smb",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (recommended) ---
        dialect: event.smb.dialect,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        status_id: status_id,
        status: status,
        file: file,
        tree_uid: tree_uid,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.smb.tree_id,
        unmapped.smb.dialect,
        unmapped.smb.disposition,
        unmapped.smb.filename,
        unmapped.smb.created,
        unmapped.smb.modified,
        unmapped.smb.accessed,
        unmapped.smb.status_code,
        unmapped.smb.status,
      )
      @name = "ocsf.smb_activity"
      publish "ocsf"

  suricata-alert-to-ocsf:
    name: Suricata Alert to OCSF Detection Finding Activity
    description: |
      Maps Suricata Alert events to an OCSF Detection Finding Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.alert"
      this = { event: this }
      python "self.flow_uid = str(self.event.flow_id)"
      if event.alert.severity == null {
        severity_id = 0
      } else if event.alert.severity == 1 {
        severity_id = 4
      } else if event.alert.severity == 2 {
        severity_id = 3
      } else if event.alert.severity == 3 {
        severity_id = 2
      }
      this = {
        // --- Classification (required) ---
        type_uid: 200401,
        severity_id: severity_id,
        class_uid: 2004,
        category_uid: 2,
        activity_id: 1,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.alert",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (recommended) ---
        status_id: 1,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        finding_info: {
          uid: flow_uid,
          title: event.alert.category,
          desc: event.alert.signature,
        },
      }
      drop(
        unmapped.flow_id,
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.alert.severity,
        unmapped.alert.category,
        unmapped.alert.signature,
      )
      @name = "ocsf.detection_finding"
      publish "ocsf"

  suricata-http-to-ocsf:
    name: Suricata HTTP to OCSF HTTP Activity
    description: Maps Suricata HTTP events to an OCSF HTTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.http"
      this = { event: this }
      if event.http.http_method == null {
        type_uid = 400200
        activity_id = 0
        activity_name = "Unknown"
      } else if event.http.http_method == "CONNECT" {
        type_uid = 400201
        activity_id = 1
        activity_name = "Connect"
      } else if event.http.http_method == "DELETE" {
        type_uid = 400202
        activity_id = 2
        activity_name = "Delete"
      } else if event.http.http_method == "GET" {
        type_uid = 400203
        activity_id = 3
        activity_name = "Get"
      } else if event.http.http_method == "HEAD" {
        type_uid = 400204
        activity_id = 4
        activity_name = "Head"
      } else if event.http.http_method == "OPTIONS" {
        type_uid = 400205
        activity_id = 5
        activity_name = "Options"
      } else if event.http.http_method == "POST" {
        type_uid = 400206
        activity_id = 6
        activity_name = "Post"
      } else if event.http.http_method == "PUT" {
        type_uid = 400207
        activity_id = 7
        activity_name = "Put"
      } else if event.http.http_method == "TRACE" {
        type_uid = 400208
        activity_id = 8
        activity_name = "Trace"
      } else {
        type_uid = 400299
        activity_id = 99
        activity_name = event.http.http_method
      }
      if event.http.status == null {
        status_id = 0
      } else if event.http.status >= 200 and event.http.status < 400 {
        status_id = 1
      } else if event.http.status >= 400 and event.http.status < 600 {
        status_id = 2
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4002,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.http",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        file: {
          type_id: 0,
          name: event.fileinfo.filename,
          size: event.fileinfo.size,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        http_request: {
          url: {
            hostname: event.http.hostname,
            url_string: event.http.url,
          },
          version: event.http.protocol,
          http_method: event.http.http_method,
          user_agent: event.http.http_user_agent,
        },
        http_response: {
          code: event.http.status,
          length: event.http.length,
          content_type: event.http.http_content_type,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: status_id,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.http.http_method,
        unmapped.http.status,
        unmapped.http.hostname,
        unmapped.http.url,
        unmapped.http.protocol,
        unmapped.http.http_user_agent,
        unmapped.http.length,
        unmapped.http.http_content_type,
      )
      // TODO: Homogenize all HTTP Activity events.
      @name = "ocsf.http_activity"
      publish "ocsf"

  suricata-fileinfo-to-ocsf:
    name: Suricata Fileinfo to OCSF HTTP Activity
    description: Maps Suricata Fileinfo events to an OCSF HTTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.fileinfo"
      this = { event: this }
      if event.http.http_method == null {
        type_uid = 400200
        activity_id = 0
        activity_name = "Unknown"
      } else if event.http.http_method == "CONNECT" {
        type_uid = 400201
        activity_id = 1
        activity_name = "Connect"
      } else if event.http.http_method == "DELETE" {
        type_uid = 400202
        activity_id = 2
        activity_name = "Delete"
      } else if event.http.http_method == "GET" {
        type_uid = 400203
        activity_id = 3
        activity_name = "Get"
      } else if event.http.http_method == "HEAD" {
        type_uid = 400204
        activity_id = 4
        activity_name = "Head"
      } else if event.http.http_method == "OPTIONS" {
        type_uid = 400205
        activity_id = 5
        activity_name = "Options"
      } else if event.http.http_method == "POST" {
        type_uid = 400206
        activity_id = 6
        activity_name = "Post"
      } else if event.http.http_method == "PUT" {
        type_uid = 400207
        activity_id = 7
        activity_name = "Put"
      } else if event.http.http_method == "TRACE" {
        type_uid = 400208
        activity_id = 8
        activity_name = "Trace"
      } else {
        type_uid = 400299
        activity_id = 99
        activity_name = event.http.http_method
      }
      if event.http.status == null {
        status_id = 0
      } else if event.http.status >= 200 and event.http.status < 400 {
        status_id = 1
      } else if event.http.status >= 400 and event.http.status < 600 {
        status_id = 2
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4002,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.fileinfo",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        file: {
          type_id: 0,
          name: event.fileinfo.filename,
          size: event.fileinfo.size,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        http_request: {
          url: {
            hostname: event.http.hostname,
            url_string: event.http.url,
          },
          version: event.http.protocol,
          http_method: event.http.http_method,
          user_agent: event.http.http_user_agent,
        },
        http_response: {
          code: event.http.status,
          length: event.http.length,
          content_type: event.http.http_content_type,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: status_id,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.http.http_method,
        unmapped.http.status,
        unmapped.http.hostname,
        unmapped.http.url,
        unmapped.http.protocol,
        unmapped.http.http_user_agent,
        unmapped.http.length,
        unmapped.http.http_content_type,
        unmapped.fileinfo.filename,
        unmapped.fileinfo.size,
      )
      // TODO: Homogenize all HTTP Activity events.
      @name = "ocsf.http_activity"
      publish "ocsf"

  suricata-ssh-to-ocsf:
    name: Suricata SSH to OCSF SSH Activity
    description: Maps Suricata SSH events to an OCSF SSH Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ssh"
      this = { event: this }
      this = {
        // --- Classification (required) ---
        type_uid: 400706,
        severity_id: 1,
        class_uid: 4007,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.ssh",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (recommended) ---
        protocol_ver: event.ssh.server.proto_version,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: 0,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.ssh.server.proto_version,
      )
      @name = "ocsf.ssh_activity"
      publish "ocsf"

  suricata-ftp-to-ocsf:
    name: Suricata FTP to OCSF FTP Activity
    description: Maps Suricata FTP events to an OCSF FTP Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ftp"
      this = { event: this }
      if event.ftp.command == null {
        type_uid = 400800
        activity_id = 0
        activity_name = "Unknown"
      } else if event.ftp.command == "STOR" or event.ftp.command == "STOU" or event.ftp.command == "PUT" or event.ftp.command == "APPE" {
        type_uid = 400801
        activity_id = 1
        activity_name = "Put"
      } else if event.ftp.command == "GET" or event.ftp.command == "RETR" {
        type_uid = 400802
        activity_id = 2
        activity_name = "Get"
      } else if event.ftp.command == "MLST" {
        type_uid = 400803
        activity_id = 3
        activity_name = "Poll"
      } else if event.ftp.command == "DELE" {
        type_uid = 400804
        activity_id = 4
        activity_name = "Delete"
      } else if event.ftp.command == "RNFR" or event.ftp.command == "RNTO" {
        type_uid = 400805
        activity_id = 5
        activity_name = "Rename"
      } else if event.ftp.command == "NLST" or event.ftp.command == "LIST" or event.ftp.command == "MLSD" {
        type_uid = 400806
        activity_id = 6
        activity_name = "List"
      } else {
        type_uid = 400899
        activity_id = 99
        activity_name = event.ftp.command
      }
      this = {
        // --- Classification (required) ---
        type_uid: type_uid,
        severity_id: 1,
        class_uid: 4008,
        category_uid: 4,
        activity_id: activity_id,
        // --- Classification (optional) ---
        activity_name: activity_name,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.ftp",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        status_id: 0,
        command: event.ftp.command,
        command_responses: event.ftp.reply,
        codes: event.ftp.completion_code,
        port: event.ftp.dynamic_port,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.ftp.command,
        unmapped.ftp.reply,
        unmapped.ftp.completion_code,
        unmapped.ftp.dynamic_port,
      )
      @name = "ocsf.ftp_activity"
      publish "ocsf"

  suricata-mail-to-ocsf:
    name: Suricata SMTP to OCSF Email Activity
    description: Maps Suricata SMTP events to an OCSF Email Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.smtp"
      this = { event: this }
      where event.smtp.mail_from != null
      where event.smtp.rcpt_to != null
      this = {
        // --- Classification (required) ---
        type_uid: 400900,
        severity_id: 1,
        class_uid: 4009,
        category_uid: 4,
        // --- Classification (optional) ---
        activity_id: 0,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.smtp",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        direction_id: 0,
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        email: {
          from: event.smtp.mail_from,
          to: event.smtp.rcpt_to
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        status_id: 0,
        smtp_hello: event.smtp.helo
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.smtp.mail_from,
        unmapped.smtp.rcpt_to,
        unmapped.smtp.helo,
      )
      @name = "ocsf.email_activity"
      publish "ocsf"

  suricata-tls-to-flow:
    name: Suricata TLS to OCSF Network Activity
    description: |
      Maps Suricata TLS events to an OCSF Network Activity event.
      Experimental and to be merged with the suricata.flow events.
    restart-on-error: 5m
    disabled: true
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.tls"
      this = { event: this }
      if event.tls.version != null {
        tls_version = event.tls.version
      } else {
        tls_version = "Unknown"
      }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      if event.tls.issuerdn != null {
          certificate = {
          issuer: event.tls.issuerdn,
          fingerprints: [{algorithm_id: 2, value: event.tls.fingerprint}],
          serial_number: event.tls.serial,
          expiration_time: event.tls.notafter,
          creation_time: event.tls.notbefore,
        }
      } else {
        certificate = null
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.tls",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        tls: {
          version: tls_version,
          sni: event.tls.sni,
          ja3s_hash: event.tls.ja3s,
          ja3_hash: event.tls.ja3,
          certificate: certificate,
        },
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.tls.issuerdn,
        unmapped.tls.fingerprint,
        unmapped.tls.serial,
        unmapped.tls.notafter,
        unmapped.tls.notbefore,
        unmapped.tls.sni,
        unmapped.tls.ja3s,
        unmapped.tls.ja3,
        unmapped.tls.version,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-snmp-to-ocsf:
    name: Suricata SNMP to OCSF Network Activity
    description: Maps Suricata SNMP events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.snmp"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.snmp",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-sip-to-ocsf:
    name: Suricata SIP to OCSF Network Activity
    description: Maps Suricata SIP events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.sip"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.sip",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-ikev2-to-ocsf:
    name: Suricata IKEV2 to OCSF Network Activity
    description: Maps Suricata IKEV2 events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.ikev2"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.ikev2",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-mqtt-to-ocsf:
    name: Suricata IKEV2 to OCSF Network Activity
    description: Maps Suricata MQTT events to an OCSF Network Activity event.
    restart-on-error: 5m
    disabled: false
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.mqtt"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.mqtt",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

  suricata-krb5-to-ocsf:
    name: Suricata KRB5 to OCSF Network Activity
    description: |
      Maps Suricata KRB5 events to an OCSF Network Activity event.
      Enable this pipeline for further Windows authentication event info.
    restart-on-error: 5m
    disabled: true
    definition: |
      // tql2
      subscribe "suricata"
      where @name == "suricata.krb5"
      this = { event: this }
      status_id = 0
      status = "Unknown"
      if event.flow.state != null {
        status_id = 99
        status = event.flow.state
      }
      this = {
        // --- Classification (required) ---
        type_uid: 400106,
        severity_id: 1,
        class_uid: 4001,
        category_uid: 4,
        activity_id: 6,
        // --- Context (required) ---
        metadata: {
          log_name: "suricata.krb5",
          version: "v1.3.0",
          product: {
            name: "Suricata",
            vendor_name: "Open Information Security Foundation",
          },
        },
        // --- Context (optional) ---
        unmapped: event,
        // --- Occurrence (required) ---
        time: event.timestamp,
        // --- Primary (required) ---
        dst_endpoint: {
          ip: event.dest_ip,
          port: event.dest_port,
        },
        // --- Primary (recommended) ---
        src_endpoint: {
          ip: event.src_ip,
          port: event.src_port,
        },
        traffic: {
          bytes_in: event.flow.bytes_toclient,
          bytes_out: event.flow.bytes_toserver,
          packets_in: event.flow.pkts_toclient,
          packets_out: event.flow.pkts_toserver,
          bytes: event.flow.bytes_toclient + event.flow.bytes_toserver,
          packets: event.flow.pkts_toclient + event.flow.pkts_toserver,
        },
        status_id: status_id,
        status: status,
      }
      drop(
        unmapped.timestamp,
        unmapped.dest_ip,
        unmapped.dest_port,
        unmapped.src_ip,
        unmapped.src_port,
        unmapped.flow.bytes_toclient,
        unmapped.flow.bytes_toserver,
        unmapped.flow.pkts_toclient,
        unmapped.flow.pkts_toserver,
        unmapped.flow.state,
      )
      @name = "ocsf.network_activity"
      publish "ocsf"

---
name: smb_files.log to OCSF SMB Activity
description: |
  Maps Zeek's smb_files.log to OCSF SMB Activity events.
---

subscribe "zeek"
where @name == "zeek.smb_files"
this = { zeek: this }
// === Classification ===
// The Zeek actions don't naturally map to the corresponding OCSF zeek
// class. Zeek actions have the pattern `SMB::{TYPE}_{ACTION}` where
// `TYPE` is one of `FILE`, `PIPE`, or `PRINT`.
if zeek.action.ends_with("_OPEN") {
  ocsf.activity_id = 2
  ocsf.activity_name = "File Open"
} else {
  ocsf.activity_id = 99
  ocsf.activity_name = "Other"
}
ocsf.category_uid = 4
ocsf.category_name = "Network Activity"
ocsf.class_uid = 4006
ocsf.class_name = "SMB Activity"
ocsf.severity_id = 1
ocsf.severity = "Informational"
ocsf.type_uid = ocsf.class_uid * 100 + ocsf.activity_id
// === Occurrence ===
ocsf.time = zeek.ts
drop zeek.ts
// === Context ===
ocsf.metadata = {
  log_name: "smb_files.log",
  logged_time: move zeek._write_ts?,
  product: {
    name: "Zeek",
    vendor_name: "Zeek",
    cpe_name: "cpe:2.3:a:zeek:zeek",
  },
  uid: move zeek.uid,
  version: "1.4.0",
}
drop zeek._path? // implied in metadata.log_name
// === Primary ===
ocsf.src_endpoint = {
  ip: zeek.id.orig_h,
  port: zeek.id.orig_p,
}
ocsf.dst_endpoint = {
  ip: zeek.id.resp_h,
  port: zeek.id.resp_p,
}
ocsf.connection_info = {
  protocol_name: "tcp",
  protocol_num: 6,
}
if zeek.id.orig_h.is_v6() or zeek.id.resp_h.is_v6() {
  ocsf.connection_info.protocol_ver_id = 6
} else {
  ocsf.connection_info.protocol_ver_id = 4
}
drop zeek.id
ocsf.file = {
  path: move zeek.path,
}
move ocsf.share = zeek.name
if zeek.action.starts_with("SMB::FILE") {
  ocsf.share_type_id = 1
  ocsf.share_type = "File"
} else if zeek.action.starts_with("SMB::PIPE") {
  ocsf.share_type_id = 2
  ocsf.share_type = "Pipe"
} else if zeek.action.starts_with("SMB::PRINT") {
  ocsf.share_type_id = 3
  ocsf.share_type = "Print"
} else {
  ocsf.share_type_id = 0
  ocsf.share_type = "Unknown"
}
drop zeek.action
this = {...ocsf, unmapped: zeek}
@name = "ocsf.smb_activity"
publish "ocsf"

---
name: Suricata Fileinfo to OCSF HTTP Activity
description: |
  Maps Suricata Fileinfo events to an OCSF HTTP Activity event.
restart-on-error: 5m
---

let $activity_id = {
  CONNECT: 1,
  DELETE: 2,
  GET: 3,
  HEAD: 4,
  OPTIONS: 5,
  POST: 6,
  PUT: 7,
  TRACE: 8,
}
let $activity_name = {
  CONNECT: "Connect",
  DELETE: "Delete",
  GET: "Get",
  HEAD: "Head",
  OPTIONS: "Options",
  POST: "Post",
  PUT: "Put",
  TRACE: "Trace",
}
subscribe "suricata"
where @name == "suricata.fileinfo"
this = { suricata: this }
if suricata.has("http") {
  suricata.http = suricata.http
} else {
  suricata.http = null
}
// === Classification ===
ocsf.severity_id = 1
ocsf.class_uid = 4002
ocsf.category_uid = 4
ocsf.activity_id = $activity_id.get(suricata.http?.http_method?, 99)
ocsf.activity_name = $activity_name.get(suricata.http?.http_method?, suricata.http.http_method)
ocsf.type_uid = ocsf.class_uid * 100 + ocsf.activity_id
// === Occurrence ===
ocsf.time = move suricata.timestamp
// === Context ===
ocsf.metadata = {
  log_name: move suricata.event_type,
  product: {
    name: "Suricata",
    vendor_name: "Open Information Security Foundation",
  },
  uid: string(move suricata.flow_id),
  version: "1.4.0",
}
if suricata.has("fileinfo") {
  ocsf.file = {
    type_id: 0,
    name: move suricata.fileinfo.filename,
    size: move suricata.fileinfo.size,
  }
} else {
  ocsf.file = null
}
// === Primary ===
ocsf.dst_endpoint = {
  ip: move suricata.dest_ip,
  port: move suricata.dest_port,
}
if suricata.http != null {
  ocsf.http_request = {
    url: {
      hostname: move suricata.http.hostname,
      url_string: move suricata.http.url,
    },
    version: move suricata.http.protocol,
    http_method: move suricata.http.http_method,
    user_agent: move suricata.http.http_user_agent,
  }
  if suricata.http.status == null {
    ocsf.status_id = 0
  } else if suricata.http.status >= 200 and suricata.http.status < 400 {
    ocsf.status_id = 1
  } else if suricata.http.status >= 400 and suricata.http.status < 600 {
    ocsf.status_id = 2
  }
  ocsf.http_response = {
    code: move suricata.http.status,
    length: move suricata.http.length,
    content_type: move suricata.http.http_content_type,
  }
} else {
  ocsf.http_request = null
  ocsf.status_id = 0
  ocsf.http_response = null
}
ocsf.src_endpoint = {
  ip: move suricata.src_ip,
  port: move suricata.src_port,
}
// TODO: Homogenize all HTTP Activity events.
this = {...ocsf, unmapped: suricata}
@name = "ocsf.http_activity"
publish "ocsf"

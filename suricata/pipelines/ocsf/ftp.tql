---
name: Suricata FTP to OCSF FTP Activity
description: |
  Maps Suricata FTP events to an OCSF FTP Activity event.
restart-on-error: 5m
---

let $activity_id = {
  STOR: 1,
  STOU: 1,
  PUT: 1,
  APPE: 1,
  GET: 2,
  RETR: 2,
  MLST: 3,
  DELE: 4,
  RNFR: 5,
  RNTO: 5,
  NLST: 6,
  LIST: 6,
  MLSD: 6,
}
let $activity_name = {
  STOR: "Put",
  STOU: "Put",
  PUT: "Put",
  APPE: "Put",
  GET: "Get",
  RETR: "Get",
  MLST: "Poll",
  DELE: "Delete",
  RNFR: "Rename",
  RNTO: "Rename",
  NLST: "List",
  LIST: "List",
  MLSD: "List",
}
subscribe "suricata"
where @name == "suricata.ftp"
this = { suricata: this }
// === Classification ===
ocsf.severity_id = 1
ocsf.class_uid = 4008
ocsf.category_uid = 4
ocsf.activity_id = $activity_id.get(suricata.ftp.command, 99)
ocsf.activity_name = $activity_name.get(suricata.ftp.command, suricata.ftp.command)
ocsf.type_uid = ocsf.class_uid * 100 + ocsf.activity_id
// === Occurrence ===
ocsf.time = move suricata.timestamp
// === Context ===
ocsf.metadata = {
  log_name: move suricata.event_type,
  product: {
    name: "Suricata",
    vendor_name: "Open Information Security Foundation",
  },
  uid: string(move suricata.flow_id),
  version: "1.4.0",
}
// === Primary ===
ocsf.dst_endpoint = {
  ip: move suricata.dest_ip,
  port: move suricata.dest_port,
}
ocsf.src_endpoint = {
  ip: move suricata.src_ip,
  port: move suricata.src_port,
}
ocsf.status_id = 0
ocsf.command = move suricata.ftp.command
ocsf.command_responses = move suricata.ftp.reply
ocsf.codes = move suricata.ftp.completion_code
this = {...ocsf, unmapped: suricata}
@name = "ocsf.ftp_activity"
publish "ocsf"

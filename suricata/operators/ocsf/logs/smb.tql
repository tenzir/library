// TODO: support frontmatter in UDOs.
//---
//description: |
//  Maps Suricata SMB events to OCSF SMB Activity events.
//---

let $activity_id = {
  FILE_SUPERSEDE: 1,
  FILE_OPEN: 2,
  FILE_CREATE: 3,
  FILE_OPEN_IF: 4,
  FILE_OVERWRITE: 5,
  FILE_OVERWRITE_IF: 6,
}
let $activity_name = {
  FILE_SUPERSEDE: "File Supersede",
  FILE_OPEN: "File Open",
  FILE_CREATE: "File Create",
  FILE_OPEN_IF: "File Open If",
  FILE_OVERWRITE: "File Overwrite",
  FILE_OVERWRITE_IF: "File Overwrite If",
}

// --- Preamble ---------------------------------

this = { suricata: this }
suricata::ocsf::map_common

// --- OCSF: classification attributes ----------

ocsf.activity_id = $activity_id.get(suricata.smb.disposition, 99)
ocsf.activity_name = $activity_name.get(suricata.smb.disposition, suricata.smb.command)
ocsf.category_uid = 4
ocsf.class_uid = 4006
ocsf.severity_id = 1
ocsf.type_uid = ocsf.class_uid * 100 + ocsf.activity_id

// --- OCSF: primary attributes -----------------

ocsf.dialect = suricata.smb.dialect?
if suricata.smb.status_code == "0x0" {
  ocsf.status_id = 1
  ocsf.status = "Success"
} else {
  ocsf.status_id = 99
  ocsf.status = suricata.smb.status?
}
drop suricata.smb.status_code

if suricata.smb.filename != null {
  ocsf.file = {
    type_id: 0,
    name: suricata.smb.filename?,
    created_time: suricata.smb.created?.milliseconds().from_epoch(),
    modified_time: suricata.smb.modified?.milliseconds().from_epoch(),
    accessed_time: suricata.smb.accessed?.milliseconds().from_epoch(),
  }
} else {
  ocsf.file = null
}

ocsf.tree_uid = suricata.smb.tree_id?.string()

// --- Finalize ---------------------------------

this = {...ocsf, unmapped: suricata}
@name = "ocsf.smb_activity"
